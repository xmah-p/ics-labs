                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f42807000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6a804000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7a002000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Name: 杨艺欣
                            | # ID: 2200017768
                            | #
                            | # Describe how and why you modified the baseline code.
                            | # Added iaddq
                            | # 
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header	
0x032: c0f2f7ffffffffffffff | 	iaddq $-9, %rdx
0x03c: 6222                 | 	andq %rdx, %rdx		# len <= 0?
0x03e: 728e01000000000000   | 	jl Rem		# if so, goto Rem:
0x047:                      | Loop:	
0x047: 50e70000000000000000 | 	mrmovq (%rdi), %r14
0x051: 50d70800000000000000 | 	mrmovq 8(%rdi), %r13
0x05b: 50c71000000000000000 | 	mrmovq 16(%rdi), %r12
0x065: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x06f: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10
0x079: 50972800000000000000 | 	mrmovq 40(%rdi), %r9
0x083: 50873000000000000000 | 	mrmovq 48(%rdi), %r8
0x08d: 50373800000000000000 | 	mrmovq 56(%rdi), %rbx
0x097: 50174000000000000000 | 	mrmovq 64(%rdi), %rcx
                            | 
0x0a1: c0f74800000000000000 | 	iaddq $72, %rdi		# src++
                            | 
0x0ab: 40164000000000000000 | 	rmmovq %rcx, 64(%rsi)	# ...and store it to dst
0x0b5: 6211                 | 	andq %rcx, %rcx		# val <= 0?
0x0b7: e0f00100000000000000 | 	jm $1, %rax		
0x0c1:                      | S8:
0x0c1: 40363800000000000000 | 	rmmovq %rbx, 56(%rsi)
0x0cb: 6233                 | 	andq %rbx, %rbx
0x0cd: e0f00100000000000000 | 	jm $1, %rax		
0x0d7:                      | S7:
0x0d7: 40863000000000000000 | 	rmmovq %r8, 48(%rsi)
0x0e1: 6288                 | 	andq %r8, %r8
0x0e3: e0f00100000000000000 | 	jm $1, %rax
0x0ed:                      | S6:
0x0ed: 40962800000000000000 | 	rmmovq %r9, 40(%rsi)
0x0f7: 6299                 | 	andq %r9, %r9
0x0f9: e0f00100000000000000 | 	jm $1, %rax
0x103:                      | S5:
0x103: 40a62000000000000000 | 	rmmovq %r10, 32(%rsi)
0x10d: 62aa                 | 	andq %r10, %r10
0x10f: e0f00100000000000000 | 	jm $1, %rax
0x119:                      | S4:
0x119: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x123: 62bb                 | 	andq %r11, %r11
0x125: e0f00100000000000000 | 	jm $1, %rax
0x12f:                      | S3:
0x12f: 40c61000000000000000 | 	rmmovq %r12, 16(%rsi)
0x139: 62cc                 | 	andq %r12, %r12
0x13b: e0f00100000000000000 | 	jm $1, %rax
0x145:                      | S2:
0x145: 40d60800000000000000 | 	rmmovq %r13, 8(%rsi)
0x14f: 62dd                 | 	andq %r13, %r13
0x151: e0f00100000000000000 | 	jm $1, %rax
0x15b:                      | S1:
0x15b: 40e60000000000000000 | 	rmmovq %r14, (%rsi)
0x165: 62ee                 | 	andq %r14, %r14
0x167: e0f00100000000000000 | 	jm $1, %rax
                            | 
0x171: c0f64800000000000000 | 	iaddq $72, %rsi		# dst++
0x17b: c0f2f7ffffffffffffff | 	iaddq $-9, %rdx		# len--
0x185: 754700000000000000   | 	jge Loop			# if so, goto Loop:
                            | 
0x18e:                      | Rem:
0x18e: 2025                 | 	rrmovq %rdx, %rbp
0x190: c0f50800000000000000 | 	iaddq $8, %rbp
                            | 	# (9 + rdx) elements remain
                            | 	# switch (rbp) {
                            | 	# case 0:
                            | 	# 	goto One;
                            | 	# case 1:
                            | 	# 	goto Two;
                            | 	# ...
                            | 	# case 7:
                            | 	# 	goto Eight;
                            | 	# }
0x19a: 6255                 | 	andq %rbp, %rbp
0x19c: 729c02000000000000   | 	jl Done    # len <= -9, Done
0x1a5: 30f11402000000000000 | 	irmovq table, %rcx
                            | 
0x1af: 6055                 | 	addq %rbp, %rbp
0x1b1: 6055                 | 	addq %rbp, %rbp
0x1b3: 6055                 | 	addq %rbp, %rbp
                            | 
0x1b5: 6051                 | 	addq %rbp, %rcx
0x1b7: 50110000000000000000 | 	mrmovq (%rcx), %rcx
0x1c1: a01f                 | 	pushq %rcx
0x1c3: 50e70000000000000000 | 	mrmovq (%rdi), %r14
0x1cd: 50d70800000000000000 | 	mrmovq 8(%rdi), %r13
0x1d7: 50c71000000000000000 | 	mrmovq 16(%rdi), %r12
0x1e1: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x1eb: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10
0x1f5: 50972800000000000000 | 	mrmovq 40(%rdi), %r9
0x1ff: 50873000000000000000 | 	mrmovq 48(%rdi), %r8
0x209: 50373800000000000000 | 	mrmovq 56(%rdi), %rbx
0x213: 90                   | 	ret
                            | 
0x214:                      | table:
0x214: 9302000000000000     | 	.quad L1
0x21c: 8a02000000000000     | 	.quad L2
0x224: 8102000000000000     | 	.quad L3
0x22c: 7802000000000000     | 	.quad L4
0x234: 6f02000000000000     | 	.quad L5
0x23c: 6602000000000000     | 	.quad L6
0x244: 5d02000000000000     | 	.quad L7
0x24c: 5402000000000000     | 	.quad L8
                            | 
0x254: 70c100000000000000   | L8: jmp S8
0x25d: 70d700000000000000   | L7:	jmp S7
0x266: 70ed00000000000000   | L6: jmp S6
0x26f: 700301000000000000   | L5: jmp S5
0x278: 701901000000000000   | L4: jmp S4
0x281: 702f01000000000000   | L3: jmp S3
0x28a: 704501000000000000   | L2: jmp S2
0x293: 705b01000000000000   | L1: jmp S1
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x29c:                      | Done:
0x29c: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x29d:                      | End:
                            | #/* $end ncopy-ys */
0x29d:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x2a0:                      | 	.align 8
0x2a0:                      | src:
0x2a0: ffffffffffffffff     | 	.quad -1
0x2a8: 0200000000000000     | 	.quad 2
0x2b0: 0300000000000000     | 	.quad 3
0x2b8: 0400000000000000     | 	.quad 4
0x2c0: 0500000000000000     | 	.quad 5
0x2c8: 0600000000000000     | 	.quad 6
0x2d0: f9ffffffffffffff     | 	.quad -7
0x2d8: 0800000000000000     | 	.quad 8
0x2e0: f7ffffffffffffff     | 	.quad -9
0x2e8: 0a00000000000000     | 	.quad 10
0x2f0: 0b00000000000000     | 	.quad 11
0x2f8: 0c00000000000000     | 	.quad 12
0x300: 0d00000000000000     | 	.quad 13
0x308: f2ffffffffffffff     | 	.quad -14
0x310: f1ffffffffffffff     | 	.quad -15
0x318: 1000000000000000     | 	.quad 16
0x320: efffffffffffffff     | 	.quad -17
0x328: 1200000000000000     | 	.quad 18
0x330: edffffffffffffff     | 	.quad -19
0x338: ecffffffffffffff     | 	.quad -20
0x340: ebffffffffffffff     | 	.quad -21
0x348: eaffffffffffffff     | 	.quad -22
0x350: 1700000000000000     | 	.quad 23
0x358: 1800000000000000     | 	.quad 24
0x360: e7ffffffffffffff     | 	.quad -25
0x368: e6ffffffffffffff     | 	.quad -26
0x370: 1b00000000000000     | 	.quad 27
0x378: e4ffffffffffffff     | 	.quad -28
0x380: 1d00000000000000     | 	.quad 29
0x388: 1e00000000000000     | 	.quad 30
0x390: 1f00000000000000     | 	.quad 31
0x398: 2000000000000000     | 	.quad 32
0x3a0: dfffffffffffffff     | 	.quad -33
0x3a8: 2200000000000000     | 	.quad 34
0x3b0: 2300000000000000     | 	.quad 35
0x3b8: dcffffffffffffff     | 	.quad -36
0x3c0: dbffffffffffffff     | 	.quad -37
0x3c8: daffffffffffffff     | 	.quad -38
0x3d0: d9ffffffffffffff     | 	.quad -39
0x3d8: d8ffffffffffffff     | 	.quad -40
0x3e0: d7ffffffffffffff     | 	.quad -41
0x3e8: d6ffffffffffffff     | 	.quad -42
0x3f0: 2b00000000000000     | 	.quad 43
0x3f8: d4ffffffffffffff     | 	.quad -44
0x400: d3ffffffffffffff     | 	.quad -45
0x408: d2ffffffffffffff     | 	.quad -46
0x410: 2f00000000000000     | 	.quad 47
0x418: d0ffffffffffffff     | 	.quad -48
0x420: cfffffffffffffff     | 	.quad -49
0x428: 3200000000000000     | 	.quad 50
0x430: 3300000000000000     | 	.quad 51
0x438: ccffffffffffffff     | 	.quad -52
0x440: cbffffffffffffff     | 	.quad -53
0x448: caffffffffffffff     | 	.quad -54
0x450: 3700000000000000     | 	.quad 55
0x458: c8ffffffffffffff     | 	.quad -56
0x460: 3900000000000000     | 	.quad 57
0x468: 3a00000000000000     | 	.quad 58
0x470: 3b00000000000000     | 	.quad 59
0x478: c4ffffffffffffff     | 	.quad -60
0x480: 3d00000000000000     | 	.quad 61
0x488: c2ffffffffffffff     | 	.quad -62
0x490: 3f00000000000000     | 	.quad 63
0x498: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x4a0:                      | 	.align 16
0x4a0:                      | Predest:
0x4a0: fadebc0000000000     | 	.quad 0xbcdefa
0x4a8:                      | dest:
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0: abefcd0000000000     | 	.quad 0xcdefab
0x5e8: abefcd0000000000     | 	.quad 0xcdefab
0x5f0: abefcd0000000000     | 	.quad 0xcdefab
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610: abefcd0000000000     | 	.quad 0xcdefab
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620: abefcd0000000000     | 	.quad 0xcdefab
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0:                      | Postdest:
0x6a0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x6a8:                      | .align 8
                            | # Run time stack
0x6a8: 0000000000000000     | 	.quad 0
0x6b0: 0000000000000000     | 	.quad 0
0x6b8: 0000000000000000     | 	.quad 0
0x6c0: 0000000000000000     | 	.quad 0
0x6c8: 0000000000000000     | 	.quad 0
0x6d0: 0000000000000000     | 	.quad 0
0x6d8: 0000000000000000     | 	.quad 0
0x6e0: 0000000000000000     | 	.quad 0
0x6e8: 0000000000000000     | 	.quad 0
0x6f0: 0000000000000000     | 	.quad 0
0x6f8: 0000000000000000     | 	.quad 0
0x700: 0000000000000000     | 	.quad 0
0x708: 0000000000000000     | 	.quad 0
0x710: 0000000000000000     | 	.quad 0
0x718: 0000000000000000     | 	.quad 0
0x720: 0000000000000000     | 	.quad 0
                            | 
0x728:                      | Stack:
