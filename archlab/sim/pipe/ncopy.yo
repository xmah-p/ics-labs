                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Name: 杨艺欣
                            | # ID: 2200017768
                            | #
                            | # Describe how and why you modified the baseline code.
                            | # Added iaddq
                            | # 
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header	
0x000: c0f2f7ffffffffffffff | 	iaddq $-9, %rdx
0x00a: 6222                 | 	andq %rdx, %rdx		# len <= 0?
0x00c: 725c01000000000000   | 	jl Rem		# if so, goto Rem:
0x015:                      | Loop:	
0x015: 50e70000000000000000 | 	mrmovq (%rdi), %r14
0x01f: 50d70800000000000000 | 	mrmovq 8(%rdi), %r13
0x029: 50c71000000000000000 | 	mrmovq 16(%rdi), %r12
0x033: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x03d: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10
0x047: 50972800000000000000 | 	mrmovq 40(%rdi), %r9
0x051: 50873000000000000000 | 	mrmovq 48(%rdi), %r8
0x05b: 50373800000000000000 | 	mrmovq 56(%rdi), %rbx
0x065: 50174000000000000000 | 	mrmovq 64(%rdi), %rcx
                            | 
0x06f: c0f74800000000000000 | 	iaddq $72, %rdi		# src++
                            | 
0x079: 40164000000000000000 | 	rmmovq %rcx, 64(%rsi)	# ...and store it to dst
0x083: 6211                 | 	andq %rcx, %rcx		# val <= 0?
0x085: e0f00100000000000000 | 	jm $1, %rax		
0x08f:                      | S8:
0x08f: 40363800000000000000 | 	rmmovq %rbx, 56(%rsi)
0x099: 6233                 | 	andq %rbx, %rbx
0x09b: e0f00100000000000000 | 	jm $1, %rax		
0x0a5:                      | S7:
0x0a5: 40863000000000000000 | 	rmmovq %r8, 48(%rsi)
0x0af: 6288                 | 	andq %r8, %r8
0x0b1: e0f00100000000000000 | 	jm $1, %rax
0x0bb:                      | S6:
0x0bb: 40962800000000000000 | 	rmmovq %r9, 40(%rsi)
0x0c5: 6299                 | 	andq %r9, %r9
0x0c7: e0f00100000000000000 | 	jm $1, %rax
0x0d1:                      | S5:
0x0d1: 40a62000000000000000 | 	rmmovq %r10, 32(%rsi)
0x0db: 62aa                 | 	andq %r10, %r10
0x0dd: e0f00100000000000000 | 	jm $1, %rax
0x0e7:                      | S4:
0x0e7: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x0f1: 62bb                 | 	andq %r11, %r11
0x0f3: e0f00100000000000000 | 	jm $1, %rax
0x0fd:                      | S3:
0x0fd: 40c61000000000000000 | 	rmmovq %r12, 16(%rsi)
0x107: 62cc                 | 	andq %r12, %r12
0x109: e0f00100000000000000 | 	jm $1, %rax
0x113:                      | S2:
0x113: 40d60800000000000000 | 	rmmovq %r13, 8(%rsi)
0x11d: 62dd                 | 	andq %r13, %r13
0x11f: e0f00100000000000000 | 	jm $1, %rax
0x129:                      | S1:
0x129: 40e60000000000000000 | 	rmmovq %r14, (%rsi)
0x133: 62ee                 | 	andq %r14, %r14
0x135: e0f00100000000000000 | 	jm $1, %rax
                            | 
0x13f: c0f64800000000000000 | 	iaddq $72, %rsi		# dst++
0x149: c0f2f7ffffffffffffff | 	iaddq $-9, %rdx		# len--
0x153: 751500000000000000   | 	jge Loop			# if so, goto Loop:
                            | 
0x15c:                      | Rem:
0x15c: 2025                 | 	rrmovq %rdx, %rbp
0x15e: c0f50800000000000000 | 	iaddq $8, %rbp
                            | 	# (9 + rdx) elements remain
                            | 	# switch (rbp) {
                            | 	# case 0:
                            | 	# 	goto One;
                            | 	# case 1:
                            | 	# 	goto Two;
                            | 	# ...
                            | 	# case 7:
                            | 	# 	goto Eight;
                            | 	# }
0x168: 6255                 | 	andq %rbp, %rbp
0x16a: 726a02000000000000   | 	jl Done    # len <= -9, Done
0x173: 30f1e201000000000000 | 	irmovq table, %rcx
                            | 
0x17d: 6055                 | 	addq %rbp, %rbp
0x17f: 6055                 | 	addq %rbp, %rbp
0x181: 6055                 | 	addq %rbp, %rbp
                            | 
0x183: 6051                 | 	addq %rbp, %rcx
0x185: 50110000000000000000 | 	mrmovq (%rcx), %rcx
0x18f: a01f                 | 	pushq %rcx
0x191: 50e70000000000000000 | 	mrmovq (%rdi), %r14
0x19b: 50d70800000000000000 | 	mrmovq 8(%rdi), %r13
0x1a5: 50c71000000000000000 | 	mrmovq 16(%rdi), %r12
0x1af: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x1b9: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10
0x1c3: 50972800000000000000 | 	mrmovq 40(%rdi), %r9
0x1cd: 50873000000000000000 | 	mrmovq 48(%rdi), %r8
0x1d7: 50373800000000000000 | 	mrmovq 56(%rdi), %rbx
0x1e1: 90                   | 	ret
                            | 
0x1e2:                      | table:
0x1e2: 6102000000000000     | 	.quad L1
0x1ea: 5802000000000000     | 	.quad L2
0x1f2: 4f02000000000000     | 	.quad L3
0x1fa: 4602000000000000     | 	.quad L4
0x202: 3d02000000000000     | 	.quad L5
0x20a: 3402000000000000     | 	.quad L6
0x212: 2b02000000000000     | 	.quad L7
0x21a: 2202000000000000     | 	.quad L8
                            | 
0x222: 708f00000000000000   | L8: jmp S8
0x22b: 70a500000000000000   | L7:	jmp S7
0x234: 70bb00000000000000   | L6: jmp S6
0x23d: 70d100000000000000   | L5: jmp S5
0x246: 70e700000000000000   | L4: jmp S4
0x24f: 70fd00000000000000   | L3: jmp S3
0x258: 701301000000000000   | L2: jmp S2
0x261: 702901000000000000   | L1: jmp S1
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x26a:                      | Done:
0x26a: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x26b:                      | End:
                            | #/* $end ncopy-ys */
